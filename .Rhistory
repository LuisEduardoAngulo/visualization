str(spatstat.data::chorley)
chorley
str(spatstat.data::humberside)
humberside
bd <- spatstat.data::humberside
plot(bd, main = NULL)
spatstat.data::humberside
summary(bd)
spatstat.data::gorillas
spatstat.data::sporophores
bd <- spatstat.data::sporophores
plot(bd, main = NULL)
spatstat.data::waka
bd <- spatstat.data::waka
plot(bd, main = NULL)
str(bd)
summary(bd)
intensity(bd)
int <- intensity(bd)
sqrt(int/area(Window(bd)))
quadratcount(bd, nx=2, ny=2)
quadratcount(bd)
quadratcount(bd, nx=3, ny=3)
quadratcount(bd)
quadratcount(bd)
quadratcount(bd, nx=2, ny=2)
quadratcount(bd, nx=3, ny=3)
q <- quadratcount(bd, nx=2, ny=2)
intensity(q)
plot(quadratcount(bd), add = TRUE)
plot(bd, main = NULL)
mucosa
str(mucosa)
str(bd)
plot(quadratcount(bd), add = TRUE)
plot(quadratcount(bd), add = TRUE, color = "Blue")
plot(quadratcount(bd), add = TRUE, color = "Blue")
quadrat.test(bd)
plot(quadratcount(bd), add = TRUE, color = "Red")
plot(quadratcount(bd), add = TRUE)
plot(quadrat.test(bd), add = TRUE)
quadrat.test(bd, nx=2, ny=2)
quadrat.test(bd, nx=3, ny=3)
d <- density(bd, edge = TRUE, kernel="gaussian")
plot(d, main = NULL)
miplot(bd)
fryplot(bd)
fryplot(bd, main = NULL)
Kest(bd)
plot(k)
k <- Kest(bd)
plot(k)
plot(Lest(bd))
plot(pcf(bd))
fc <- Fest(bd)
plot(fc)
a <- capture.output(plot(envelope(bd, Fest, nsim = 39),
main = NULL, legend = FALSE))
g <- Gest(bd)
plot(g)
j <- Jest(bd)
plot(j)
summary(bd)
str(bd)
waka
waka$window
waka$marks
waka$markformat
waka$y
waka$n
waka
plot(distmap(bd))
save.image("C:/Users/leang/OneDrive/Maestría/I Semestre/Machine Learning/Tarea/Assignment 3/Data.RData")
load("C:/Users/leang/OneDrive/Maestría/I Semestre/Machine Learning/Tarea/Assignment 3/Data.RData")
plot(bd, main = NULL)
plot(bd, main = NULL)
bd <- spatstat.data::waka
plot(bd)
plot(bd)
str(bd)
waka <- spatstat.data::waka
plot(waka)
str(waka)
waka
summary(bd)
spatstat.data::waka
summary(bd)
str(waka)
intensity(bd)
library(spatstat)
intensity(bd)
summary(waka)
str(waka)
intensity(bd)
sqrt(int/area(Window(bd)))
quadratcount(bd)
quadratcount(bd, nx=2, ny=2)
q <- quadratcount(bd, nx=2, ny=2)
intensity(waka)
int <- intensity(waka)
sqrt(int/area(Window(waka)))
quadratcount(waka)
plot(quadratcount(waka), add = TRUE)
quadratcount(waka)
q <- quadratcount(waka)
intensity(q)
quadrat.test(bd)
plot(quadrat.test(bd), add = TRUE)
d <- density(waka, edge = TRUE, kernel="gaussian")
plot(d, main = NULL)
quadrat.test(waka)
miplot(bd)
miplot(waka)
fryplot(waka)
?Fest()
?Gest()
?Kest()
allstats(waka)
allstats(bd)
plot(fc)
plot(fc, main = NULL)
plot(g, main = NULL)
plot(j, main = NULL)
plot(k, main = NULL)
DB <- read.csv("data/nba_2017_br", header = TRUE, sep = ",")
DB <- read.csv("C:/Archivos_personales\data", header = TRUE, sep = ",")
DB <- read.csv("C:/Archivos_personales/data/nba_2017_br", header = TRUE, sep = ",")
DB <- read.csv(C:/Archivos_personales/data/nba_2017_br, header = TRUE, sep = ",")
DB <- read.csv('C:/Archivos_personales/data/nba_2017_br', header = TRUE, sep = ",")
DB <- read.csv2('C:/Archivos_personales/data/nba_2017_br', header = TRUE, sep = ",")
DB <- read.csv("C:/Archivos_personales/data/nba_2017_br")
setwd("C:/Archivos_personales")
bd <- read.csv(file = "data/nba_2017_br")
bd <- read.csv(file = "data/nba_2017_br.csv")
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br.xml", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br", header = TRUE)
bd <- read.table(file = "data/nba_2017_br.xlxs", header = TRUE)
bd <- read.table(file = "data/nba_2017_br.xlsx", header = TRUE)
View(bd)
bd <- read.table(file = "data/nba_2017_br.xlsx", header = TRUE)
bd <- read.table(file = "data/nba_2017_br.txt", header = TRUE)
setwd("C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/Final assigment/Int_Visualization")
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
View(bd)
str(bd)
shiny::runApp()
runApp()
runApp()
runApp()
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
runApp()
runApp()
runApp()
runApp()
runApp()
?plotOutput
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-5')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/stockVis')
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-2')
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-2')
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-2')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/stockVis')
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/stockVis')
library(ggplot2)
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-1-HelloWorld')
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Graph <- bd[,c(2,11)]
View(Graph)
View(bd)
runApp()
runApp()
runApp()
View(bd)
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Graph <- bd[,c(2,5,6,10)]
View(Graph)
View(bd)
View(bd)
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-1-HelloWorld')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?reactive
?reactive()
runApp()
runApp()
?getSymbols()
library("readr")
library(shiny)
runApp()
library("ggplot2")
runApp()
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
input$select
runApp()
runApp()
runApp()
selected_tm = as.numeric(input$select)
dataInput <- reactive({
selected_tm = as.numeric(input$select)
return(bd[bd$Tm==selected_tm,])
dataInput <- reactive({
selected_tm = as.numeric(input$select)
return(bd[bd$Tm==selected_tm,])
})
dataInput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyr)
runApp()
library(plyr)
runApp()
runApp()
runApp()
runApp()
runApp()
?switch()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?subset
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?replace()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
View(bd)
runApp()
shiny::runApp()
View(bd)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bd %>% bd
mutate(AGE2 = ifelse(AGE >= 19 & AGE <= 23, "19-23", ) )
bd %>% bd
mutate(AGE2 = ifelse(AGE >= 19 & AGE <= 23, "19-23",""))
bd1 <- bd %>%
mutate(AGE2 = ifelse(AGE >= 19 & AGE <= 23, "19-23",""))
View(bd)
bd1 <- bd %>%
mutate(AGE2 = ifelse(Age >= 19 & AgeE <= 23, "19-23",""))
bd1 <- bd %>%
mutate(AGE2 = ifelse(Age >= 19 & Age <= 23, "19-23",""))
View(bd1)
bd1 <- bd %>%
mutate(AGE2 = ifelse(Age >= 19 & Age <= 22, "19-22",""),
AGE2 = ifelse(Age >= 23 & Age <= 26, "23-26",""),
AGE2 = ifelse(Age >= 27 & Age <= 30, "27-30",""),
AGE2 = ifelse(Age >= 31 & Age <= 35, "31-35","35-40"))
View(bd1)
bd1 <- bd %>%
mutate(AGE2 = ifelse(Age >= 19 & Age <= 22, "19-22",
ifelse(Age >= 23 & Age <= 26, "23-26",
ifelse(Age >= 27 & Age <= 30, "27-30",
ifelse(Age >= 31 & Age <= 35, "31-35","35-40"))))
bd1 <- bd %>%
mutate(AGE2 = ifelse(Age >= 19 & Age <= 22, "19-22",
ifelse(Age >= 23 & Age <= 26, "23-26",
ifelse(Age >= 27 & Age <= 30, "27-30",
ifelse(Age >= 31 & Age <= 35, "31-35","35-40")))))
View(bd1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
?geom_label()
runApp()
runApp()
runApp()
colnames(iris)
values = iris$Sepal.Length
values(iris$Sepal.Length)
runApp()
runApp()
?panel.grid.major()
runApp()
shiny::runApp()
mtcars
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
bd <- bd[,-1]
View(bd)
View(bd)
runApp()
runApp()
rownames(bd)
row.names(bd$Player)
rownames(bd$Player)
bd$Player
runApp()
runApp()
runApp()
?geom_text()
rownames(bd)
rownames(mtcars)
View(bd)
runApp()
runApp()
runApp()
View(bd)
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_bar()
runApp()
shiny::runApp()
runApp()
View(bd)
runApp()
runApp()
